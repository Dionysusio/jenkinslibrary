#!groovy

@Library('jenkinslibrary@master') _

//func from shareibrary
def build = new org.devops.build()
//def tools = new org.devops.tools()
def gitlab = new org.devops.gitlab()
def toemail = new org.devops.toemail()


//env
String buildType = "${env.buildType}"
String buildShell = "${env.buildShell}"
String srcUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"

 if("${runOpts}" == "GitlabPush"){
    branchName = branch - "refs/heads/"
    currentBuild.description = "Trigger by ${userName} ${branch}"
    gitlab.ChangeCommitStatus(projectId,commitSha,"running")
 }

//pipeline
pipeline{
    agent { node { label "master"}}
    
    
    stages{

        stage("CheckOut"){
            steps{
                script{
                    println("-------------------,${branchName}")
                
                    //tools.PrintMes("获取代码","green")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], 
                              doGenerateSubmoduleConfigurations: false, extensions: [], 
                              submoduleCfg: [], 
                              userRemoteConfigs: [[credentialsId: 'af98a605-1dc1-414c-946d-0b3960ce406c', url: "${srcUrl}"]]])
                }
            }
        }
        stage("Build"){
            steps{
                script{
                
                    //tools.PrintMes("执行打包","green")
                    build.Build(buildType,buildShell)
                }
            }
       }
    }
    post{
     always{
       script{
          println("always")
       } 
     }
     success{
       script{
         println("success")
         gitlab.ChangeCommitStatus(projectId,commitSha,"success")
         toemail.Email("流水线构建成功",userEmail)
       }
     }
     failure{
       script{
         println("failure")
         gitlab.ChangeCommitStatus(projectId,commitSha,"failed")
         toemail.Email("流水线构建失败！",userEmail)
       }
     }
     aborted{
        script{
          println("aborted")
          gitlab.ChangeCommitStatus(projectId,commitSha,"canceled")
          toemail.Email("流水线构建中途被取消了！",userEmail)
        }
      }
     }
}
